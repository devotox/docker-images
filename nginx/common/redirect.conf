set $fixed_www '';
set $444_redirect 0;
set $needs_redirect 0;

# check and decide on adding www prefix
#if ($host !~* ^www(.*)) {
#	set $fixed_www 'www.';
#	set $needs_redirect 1;
#}

# check and decide on moving to https based on real_scheme ( needed locally )
# map.conf has real_scheme which aggregates scheme and http_x_forwarded_proto to a single variable
if ($real_scheme != 'https') {
	set $needs_redirect 1;
}

if ($request_uri ~* ^.*(elb-)?health-check(\.html)?(\:80|\:443|\:8080|\:8443)?$ ) {
	return 200 '{ "healthy": true }';
}

# if its a status check do not redirect ( needed amazon )
if ($request_uri = '/api/status') {
	set $needs_redirect 0;
}

# if its a ngrok.io link do not redirect
if ($host ~ ngrok.io$) {
	set $needs_redirect 0;
}

# set $needs_redirect 0;
# Redirect all requests to https and adds www prefix
if ($needs_redirect) {
	return 301 https://$fixed_www$host$request_uri;
}

## Only allow these request methods
if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$ ) {
	set $444_redirect 1;
}

## Dont allow random ip scanning
if ($host !~ \.(com|co\.uk|io)$ ) {
	set $444_redirect 1;
}

## Deny certain Referers (they will affect our SEO scores) ###
if ( $http_referer ~* (babes|forsale|girl|jewelry|nudit|organic|poker|porn|teen) ) {
	set $444_redirect 1;
}

## Block download agents
if ($http_user_agent ~* LWP::Simple|BBBike|wget) {
	set $444_redirect 1;
}

## Block some robots ##
if ($http_user_agent ~* msnbot|scrapbot) {
	set $444_redirect 1;
}

# if its a status check do not redirect ( needed amazon )
if ($request_uri = '/api/status') {
	set $444_redirect 0;
}

# if its a direct internal request from docker
# using its networking feature do not redirect
if ($host ~ ^server$) {
	set $444_redirect 0;
}

# set $444_redirect 0;
# returns a 444 if initial restrictions are not met
if ($444_redirect) {
	return 444;
}